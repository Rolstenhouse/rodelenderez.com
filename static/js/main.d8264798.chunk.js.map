{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","min","max","Math","ceil","floor","random","App","useState","images","setImages","pics","useEffect","interval","setInterval","window","innerWidth","innerHeight","x","y","size","img","url","length","clearInterval","className","src","map","image","style","position","left","top","width","height","backgroundColor","bottom","color","fontSize","display","justifyContent","alignItems","scrollamount","margin","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,MCgBf,SAASA,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,GAGlD,IAqFeM,EArFH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,KAEVC,EAAO,CACX,qBACA,oBACA,uBACA,qBACA,sBAwBF,OArBAC,qBAAU,WAER,IAAMC,EAAWC,aAAY,WAC3B,GAAKC,OAAOC,YAAeD,OAAOE,YAAlC,CAGA,IAAIC,EAAIlB,EAAa,EAAGe,OAAOC,WAAa,KACxCG,EAAInB,EAAa,EAAGe,OAAOE,YAAc,KACzCG,EAAOpB,EAAa,GAAI,KACtBqB,EAAM,CACVC,IAAKX,EAAKR,KAAKE,MAAMF,KAAKG,SAAWK,EAAKY,SAC1CL,EAAGA,EACHC,EAAGA,EACHC,KAAMA,GAERV,EAAU,GAAD,mBAAKD,GAAL,CAAaY,QACrB,MAEH,OAAO,kBAAMG,cAAcX,MAC1B,CAACJ,IAGF,qBAAKgB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAI,qBAAqBD,UAAU,WACvChB,EAAOkB,KAAI,SAACC,GACX,OACE,qBACEF,IAAKE,EAAMN,IACXO,MAAO,CACLC,SAAU,WACVC,KAAMH,EAAMV,EACZc,IAAKJ,EAAMT,EACXc,MAAOL,EAAMR,MAEfK,UAAU,cAIhB,qBACEI,MAAO,CACLI,MAAO,OACPC,OAAQ,GACRC,gBAAiB,QACjBL,SAAU,QACVM,OAAQ,EACRC,MAAO,QACPC,SAAU,GACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAXhB,SAcE,0BAASC,aAAa,IAAtB,sCAEE,mBACEb,MAAO,CAAEU,QAAS,SAAUI,OAAQ,OAAQN,MAAO,SACnDO,KAAK,8CAFP,mBAFF,IASE,mBACEf,MAAO,CAAEU,QAAS,SAAUI,OAAQ,OAAQN,MAAO,SACnDO,KAAK,mDAFP,iBAKK,eCvFFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d8264798.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n/**\n *\n */\nconst imageType = {\n  url: \"\",\n  x: \"\",\n  y: \"\",\n  rotationSpeed: \"\",\n  size: \"\",\n};\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const pics = [\n    \"/photos/rodel2.png\",\n    \"/photos/rodel.png\",\n    \"/photos/bassoon.jpeg\",\n    \"/photos/rodel3.png\",\n    \"/photos/rodel4.png\"\n  ];\n\n  useEffect(() => {\n    // Every 2 seconds add another image\n    const interval = setInterval(() => {\n      if (!window.innerWidth || !window.innerHeight) {\n        return;\n      }\n      let x = getRandomInt(0, window.innerWidth - 300);\n      let y = getRandomInt(0, window.innerHeight - 300);\n      let size = getRandomInt(50, 400);\n      const img = {\n        url: pics[Math.floor(Math.random() * pics.length)],\n        x: x,\n        y: y,\n        size: size,\n      };\n      setImages([...images, img]);\n    }, 1500);\n\n    return () => clearInterval(interval);\n  }, [images]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"/photos/rodel2.png\" className=\"rotate\" />\n        {images.map((image) => {\n          return (\n            <img\n              src={image.url}\n              style={{\n                position: \"absolute\",\n                left: image.x,\n                top: image.y,\n                width: image.size,\n              }}\n              className=\"rotate\"\n            />\n          );\n        })}\n        <div\n          style={{\n            width: \"100%\",\n            height: 50,\n            backgroundColor: \"black\",\n            position: \"fixed\",\n            bottom: 0,\n            color: \"white\",\n            fontSize: 20,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <marquee scrollamount=\"4\">\n            made with ❤️ by\n            <a\n              style={{ display: \"inline\", margin: \".4em\", color: \"white\" }}\n              href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n            >\n              tyler\n            </a>\n            &\n            <a\n              style={{ display: \"inline\", margin: \".4em\", color: \"white\" }}\n              href=\"https://github.com/Rolstenhouse/rodelenderez.com\"\n            >\n              rob\n            </a>{\" \"}\n          </marquee>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}