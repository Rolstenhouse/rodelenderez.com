{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","min","max","Math","ceil","floor","random","App","useState","images","setImages","useEffect","setInterval","window","innerWidth","innerHeight","img","url","x","y","size","className","map","image","src","style","position","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,MCgBf,SAASA,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,GAGlD,IA6CeM,EA7CH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,KAuBhB,OApBAC,qBAAU,WAGRC,aAAY,WACV,GAAKC,OAAOC,YAAeD,OAAOE,YAAlC,CAGA,IAGMC,EAAM,CACVC,IAAK,uBACLC,EALMlB,EAAa,GAAIa,OAAOC,WAAa,IAM3CK,EALMnB,EAAa,GAAIa,OAAOE,YAAc,IAM5CK,KALSpB,EAAa,GAAI,MAO5BU,EAAU,GAAD,mBAAKD,GAAL,CAAaO,QACrB,OACF,IAGD,qBAAKK,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACGZ,EAAOa,KAAI,SAACC,GACX,OACE,qBACEC,IAAKD,EAAMN,IACXQ,MAAO,CACLC,SAAU,WACVR,EAAGK,EAAML,EACTC,EAAGI,EAAMJ,EACTQ,MAAOJ,EAAMH,MAEfC,UAAU,mBC9CTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd64da7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n/**\n *\n */\nconst imageType = {\n  url: \"\",\n  x: \"\",\n  y: \"\",\n  rotationSpeed: \"\",\n  size: \"\",\n};\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    // Every 2 seconds add another image\n\n    setInterval(() => {\n      if (!window.innerWidth || !window.innerHeight) { \n        return\n      }\n      let x = getRandomInt(10, window.innerWidth - 10);\n      let y = getRandomInt(10, window.innerHeight - 10);\n      let size = getRandomInt(50, 400);\n      const img = {\n        url: \"/photos/bassoon.jpeg\",\n        x: x,\n        y: y,\n        size: size,\n      };\n      setImages([...images, img]);\n    }, 2000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {images.map((image) => {\n          return (\n            <img\n              src={image.url}\n              style={{\n                position: \"absolute\",\n                x: image.x,\n                y: image.y,\n                width: image.size,\n              }}\n              className=\"rotate\"\n            />\n          );\n        })}\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}